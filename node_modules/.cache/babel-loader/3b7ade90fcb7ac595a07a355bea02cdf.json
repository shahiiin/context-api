{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { addPost } from \"../../Services/addPost\";\nimport { deletePost } from \"../../Services/deletePost\";\nimport { editPost } from \"../../Services/editPost\";\nimport { getPosts } from \"../../Services/getPosts\";\nimport { addPostFailure, addPostSuccess, deletePostFailure, deletePostSuccess, editPostFailure, editPostSuccess, fetchPostsFailure, fetchPostsSuccess } from \"../modules/posts/postsActions\";\nimport { ADD_POST_REQUEST, DELETE_POST_REQUEST, EDIT_POST_REQUEST, FETCH_POSTS_REQUEST } from \"../modules/posts/postsTypes\";\n\nfunction* fetchPosts() {\n  try {\n    const {\n      data\n    } = yield call(() => getPosts());\n    yield put(fetchPostsSuccess(data));\n  } catch (e) {\n    yield put(fetchPostsFailure(e.message));\n  }\n}\n\nexport function* fetchPostSaga() {\n  yield takeEvery(FETCH_POSTS_REQUEST, fetchPosts);\n}\n\nfunction* removePost(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    yield call(() => deletePost(payload.id));\n    yield put(deletePostSuccess(payload.id));\n    payload.navigate(\"/\", {\n      replace: true\n    });\n  } catch (e) {\n    yield put(deletePostFailure(e.message));\n  }\n}\n\nexport function* deletePostSaga() {\n  yield takeEvery(DELETE_POST_REQUEST, removePost);\n}\n\nfunction* addNewPost(_ref2) {\n  let {\n    payload\n  } = _ref2;\n\n  try {\n    const {\n      data\n    } = yield call(() => addPost(payload.post));\n    yield put(addPostSuccess(data));\n    payload.navigate(\"/\", {\n      replace: true\n    });\n  } catch (e) {\n    yield put(addPostFailure(e.message));\n  }\n}\n\nexport function* addPostSaga() {\n  yield takeEvery(ADD_POST_REQUEST, addNewPost);\n}\n\nfunction* putPost(_ref3) {\n  let {\n    payload\n  } = _ref3;\n\n  try {\n    const {\n      data\n    } = yield call(() => editPost(payload.post.id, payload.post));\n    yield put(editPostSuccess(data));\n    payload.navigate(\"/\", {\n      replace: true\n    });\n  } catch (e) {\n    yield put(editPostFailure(e.message));\n  }\n}\n\nexport function* editPostSaga() {\n  yield takeEvery(EDIT_POST_REQUEST, putPost);\n}","map":{"version":3,"names":["call","put","takeEvery","addPost","deletePost","editPost","getPosts","addPostFailure","addPostSuccess","deletePostFailure","deletePostSuccess","editPostFailure","editPostSuccess","fetchPostsFailure","fetchPostsSuccess","ADD_POST_REQUEST","DELETE_POST_REQUEST","EDIT_POST_REQUEST","FETCH_POSTS_REQUEST","fetchPosts","data","e","message","fetchPostSaga","removePost","payload","id","navigate","replace","deletePostSaga","addNewPost","post","addPostSaga","putPost","editPostSaga"],"sources":["/home/shahin/Desktop/project/testTask/src/Redux/sagas/postsSaga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { addPost } from \"../../Services/addPost\";\nimport { deletePost } from \"../../Services/deletePost\";\nimport { editPost } from \"../../Services/editPost\";\nimport { getPosts } from \"../../Services/getPosts\";\nimport {\n  addPostFailure,\n  addPostSuccess,\n  deletePostFailure,\n  deletePostSuccess,\n  editPostFailure,\n  editPostSuccess,\n  fetchPostsFailure,\n  fetchPostsSuccess,\n} from \"../modules/posts/postsActions\";\nimport {\n  ADD_POST_REQUEST,\n  DELETE_POST_REQUEST,\n  EDIT_POST_REQUEST,\n  FETCH_POSTS_REQUEST,\n} from \"../modules/posts/postsTypes\";\n\nfunction* fetchPosts() {\n  try {\n    const { data } = yield call(() => getPosts());\n    yield put(fetchPostsSuccess(data));\n  } catch (e) {\n    yield put(fetchPostsFailure(e.message));\n  }\n}\n\nexport function* fetchPostSaga() {\n  yield takeEvery(FETCH_POSTS_REQUEST, fetchPosts);\n}\n\nfunction* removePost({ payload }) {\n  try {\n    yield call(() => deletePost(payload.id));\n    yield put(deletePostSuccess(payload.id));\n    payload.navigate(\"/\", { replace: true });\n  } catch (e) {\n    yield put(deletePostFailure(e.message));\n  }\n}\n\nexport function* deletePostSaga() {\n  yield takeEvery(DELETE_POST_REQUEST, removePost);\n}\n\nfunction* addNewPost({ payload }) {\n  try {\n    const { data } = yield call(() => addPost(payload.post));\n    yield put(addPostSuccess(data));\n    payload.navigate(\"/\", { replace: true });\n  } catch (e) {\n    yield put(addPostFailure(e.message));\n  }\n}\n\nexport function* addPostSaga() {\n  yield takeEvery(ADD_POST_REQUEST, addNewPost);\n}\n\nfunction* putPost({ payload }) {\n  try {\n    const { data } = yield call(() => editPost(payload.post.id, payload.post));\n    yield put(editPostSuccess(data));\n    payload.navigate(\"/\", { replace: true });\n  } catch (e) {\n    yield put(editPostFailure(e.message));\n  }\n}\n\nexport function* editPostSaga() {\n  yield takeEvery(EDIT_POST_REQUEST, putPost);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}