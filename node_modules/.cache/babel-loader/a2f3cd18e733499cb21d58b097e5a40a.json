{"ast":null,"code":"var _jsxFileName = \"/home/shahin/Desktop/project/testTask/src/Components/Input/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useCallback } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props, ref) {\n  _s();\n\n  var _formState$errors$nam, _formState$errors$nam2;\n\n  const {\n    control,\n    name,\n    formState,\n    lbl,\n    type,\n    ...restProps\n  } = props;\n  const renderInput = useCallback(_ref => {\n    let {\n      field\n    } = _ref;\n\n    if (type === \"textarea\") {\n      return /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"px-3 py-1 outline-none text-sm bg-slate-100 border border-slate-300 rounded-md min-h-[10rem]\",\n        id: name,\n        ...field,\n        ...restProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"px-3 py-1 outline-none text-sm bg-slate-100 border border-slate-300 rounded-md\",\n        id: name,\n        ...field,\n        ...restProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    }\n  }, [control]);\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: \"mb-3\",\n      children: lbl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: control,\n      render: renderInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), ((_formState$errors$nam = formState.errors[name]) === null || _formState$errors$nam === void 0 ? void 0 : _formState$errors$nam.message) && formState.touchedFields[name] && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ml-2 text-xs text-red-600\",\n      children: (_formState$errors$nam2 = formState.errors[name]) === null || _formState$errors$nam2 === void 0 ? void 0 : _formState$errors$nam2.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"/GeCKGS3p48NOqaA7ypI3mxS6Jo=\");\n\n_c = Input;\nexport default _c2 = /*#__PURE__*/forwardRef(Input);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","forwardRef","useCallback","Controller","Input","props","ref","control","name","formState","lbl","type","restProps","renderInput","field","errors","message","touchedFields"],"sources":["/home/shahin/Desktop/project/testTask/src/Components/Input/Input.jsx"],"sourcesContent":["import React, { forwardRef, useCallback } from \"react\";\nimport { Controller } from \"react-hook-form\";\nfunction Input(props, ref) {\n  const { control, name, formState, lbl, type, ...restProps } = props;\n\n  const renderInput = useCallback(\n    ({ field }) => {\n      if (type === \"textarea\") {\n        return (\n          <textarea\n            className=\"px-3 py-1 outline-none text-sm bg-slate-100 border border-slate-300 rounded-md min-h-[10rem]\"\n            id={name}\n            {...field}\n            {...restProps}\n          />\n        );\n      } else {\n        return (\n          <input\n            className=\"px-3 py-1 outline-none text-sm bg-slate-100 border border-slate-300 rounded-md\"\n            id={name}\n            {...field}\n            {...restProps}\n          />\n        );\n      }\n    },\n    [control]\n  );\n\n  return (\n    <fieldset className=\"flex flex-col\">\n      <label htmlFor={name} className=\"mb-3\">\n        {lbl}\n      </label>\n      <Controller name={name} control={control} render={renderInput} />\n      {formState.errors[name]?.message && formState.touchedFields[name] && (\n        <span className=\"ml-2 text-xs text-red-600\">\n          {formState.errors[name]?.message}\n        </span>\n      )}\n    </fieldset>\n  );\n}\n\nexport default forwardRef(Input);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,OAA/C;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2B;EAAA;;EAAA;;EACzB,MAAM;IAAEC,OAAF;IAAWC,IAAX;IAAiBC,SAAjB;IAA4BC,GAA5B;IAAiCC,IAAjC;IAAuC,GAAGC;EAA1C,IAAwDP,KAA9D;EAEA,MAAMQ,WAAW,GAAGX,WAAW,CAC7B,QAAe;IAAA,IAAd;MAAEY;IAAF,CAAc;;IACb,IAAIH,IAAI,KAAK,UAAb,EAAyB;MACvB,oBACE;QACE,SAAS,EAAC,8FADZ;QAEE,EAAE,EAAEH,IAFN;QAAA,GAGMM,KAHN;QAAA,GAIMF;MAJN;QAAA;QAAA;QAAA;MAAA,QADF;IAQD,CATD,MASO;MACL,oBACE;QACE,SAAS,EAAC,gFADZ;QAEE,EAAE,EAAEJ,IAFN;QAAA,GAGMM,KAHN;QAAA,GAIMF;MAJN;QAAA;QAAA;QAAA;MAAA,QADF;IAQD;EACF,CArB4B,EAsB7B,CAACL,OAAD,CAtB6B,CAA/B;EAyBA,oBACE;IAAU,SAAS,EAAC,eAApB;IAAA,wBACE;MAAO,OAAO,EAAEC,IAAhB;MAAsB,SAAS,EAAC,MAAhC;MAAA,UACGE;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,UAAD;MAAY,IAAI,EAAEF,IAAlB;MAAwB,OAAO,EAAED,OAAjC;MAA0C,MAAM,EAAEM;IAAlD;MAAA;MAAA;MAAA;IAAA,QAJF,EAKG,0BAAAJ,SAAS,CAACM,MAAV,CAAiBP,IAAjB,iFAAwBQ,OAAxB,KAAmCP,SAAS,CAACQ,aAAV,CAAwBT,IAAxB,CAAnC,iBACC;MAAM,SAAS,EAAC,2BAAhB;MAAA,oCACGC,SAAS,CAACM,MAAV,CAAiBP,IAAjB,CADH,2DACG,uBAAwBQ;IAD3B;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAzCQZ,K;;KAAAA,K;AA2CT,kCAAeH,UAAU,CAACG,KAAD,CAAzB"},"metadata":{},"sourceType":"module"}